{"version":3,"sources":["components/Tabs/Tab.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tab","id","title","onSelect","selected","className","href","onClick","undefined","Tabs","tabs","selectedTabId","onTabSelected","selectedTab","React","useMemo","find","tab","map","content","App","useState","setSelectedTabId","tabDefinitions","ReactDOM","render","document","getElementById"],"mappings":"0MAOaA,EAA0B,SAAC,GAAD,IACrCC,EADqC,EACrCA,GACAC,EAFqC,EAErCA,MACAC,EAHqC,EAGrCA,SACAC,EAJqC,EAIrCA,SAJqC,OAMrC,oBAAI,UAAQ,MAAMC,UAAWD,EAAW,YAAc,GAAtD,SACE,mBACEE,KAAI,WAAML,GACV,UAAQ,UACRM,QAASH,OAAWI,EAAYL,EAHlC,SAKGD,OCLMO,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcC,IAAMC,SACxB,kCAAML,EAAKM,MAAK,SAACC,GAAD,OAASA,EAAIhB,KAAOU,YAApC,QAAsDD,EAAK,KAC3D,CAACA,EAAMC,IAGT,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKN,UAAU,gBAAf,SACE,6BACGK,EAAKQ,KAAI,SAACD,GAAD,OACR,cAAC,EAAD,CACEhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,SAAU,kBAAMS,EAAcK,IAC9Bb,SAAUa,IAAQJ,WAM1B,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,SACGQ,EAAYM,cClCRC,EAAgB,WAAO,IAAD,EACjC,EAA0CN,IAAMO,SAAS,SAAzD,mBAAOV,EAAP,KAAsBW,EAAtB,KAEMC,EAAiBT,IAAMC,SAC3B,iBAAM,CACJ,CAAEd,GAAI,QAASC,MAAO,QAASiB,QAAS,eACxC,CAAElB,GAAI,QAASC,MAAO,QAASiB,QAAS,eACxC,CAAElB,GAAI,QAASC,MAAO,QAASiB,QAAS,kBAE1C,IAGF,OACE,sBAAKd,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,UAGGkB,EAAeP,MAAK,SAACC,GAAD,OAASA,EAAIhB,KAAOU,YAH3C,aAGG,EAAwDT,SAG3D,cAAC,EAAD,CACEQ,KAAMa,EACNZ,cAAeA,EACfC,cAAe,SAACK,GAAD,OAASK,EAAiBL,EAAIhB,WC1BrDuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3ba0ed10.chunk.js","sourcesContent":["export interface TabProps {\n  id: string;\n  title: string;\n  onSelect: React.MouseEventHandler<HTMLAnchorElement>;\n  selected: boolean;\n}\n\nexport const Tab: React.FC<TabProps> = ({\n  id,\n  title,\n  onSelect,\n  selected\n}) => (\n  <li data-cy='Tab' className={selected ? 'is-active' : ''}>\n    <a\n      href={`#${id}`}\n      data-cy='TabLink'\n      onClick={selected ? undefined : onSelect}\n    >\n      {title}\n    </a>\n  </li>\n);\n","import React from 'react';\nimport { Tab, TabProps } from './Tab';\n\nexport interface ITabDefinition\n  extends Omit<TabProps, 'onSelect' | 'selected'> {\n  content: React.ReactNode;\n}\n\ninterface Props {\n  tabs: ITabDefinition[];\n  selectedTabId: string;\n  onTabSelected: (tab: ITabDefinition) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = React.useMemo<ITabDefinition>(\n    () => tabs.find((tab) => tab.id === selectedTabId) ?? tabs[0],\n    [tabs, selectedTabId],\n  );\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <Tab\n              id={tab.id}\n              title={tab.title}\n              onSelect={() => onTabSelected(tab)}\n              selected={tab === selectedTab}\n            />\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { ITabDefinition, Tabs } from './components/Tabs';\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = React.useState('tab-1');\n\n  const tabDefinitions = React.useMemo<ITabDefinition[]>(\n    () => [\n      { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n      { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n      { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n    ],\n    [],\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabDefinitions.find((tab) => tab.id === selectedTabId)?.title}\n      </h1>\n\n      <Tabs\n        tabs={tabDefinitions}\n        selectedTabId={selectedTabId}\n        onTabSelected={(tab) => setSelectedTabId(tab.id)}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}